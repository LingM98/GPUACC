#!/bin/bash

#SBATCH --job-name=krylov_2d_benchmark # Job name
#SBATCH --output=krylov2d_data.out # Standard output file
#SBATCH --error=krylov2d_error.out # Standard error file
#SBATCH --account=m4296 # Allocation account
#SBATCH --qos=regular # Partition or queue name
#SBATCH --nodes=1 # Number of nodes
#SBATCH --ntasks=1 # Number of tasks
#SBATCH --cpus-per-task=48 # Number of CPU cores per task
#SBATCH --constraint=gpu
#SBATCH --gpus=1 # Number of GPUs to use in this example
#SBATCH --exclusive # Request exclusive use of the resources
#SBATCH --mem=32GB
#SBATCH --time=01:00:00 # Maximum runtime (D-HH:MM:SS)
#SBATCH --mail-type=END # Send email at job completion
#SBATCH --mail-user=lingm@udel.edu # Email address for notifications

# Move to the directory where the code is stored
cd ~/Testing1/GPUACC/Krylov_low-rank/original_solver/
# Load Julia module if needed
# module load julia

# Create the matrix sizes to use in the runs
N_list="256 512 1024 2048 4096 8192"

# Use at least 10 repetitions for each case
num_reps=20

# Run the CPU and GPU examples
for N in $N_list
do
	printf "\n"
    julia cpu_solver_2D.jl --Nx=$N --Ny=$N --max_iter=$num_reps
	printf "\n"
    julia gpu_solver_2D.jl --Nx=$N --Ny=$N --max_iter=$num_reps
	printf "\n"
done
